version: '3.8'
services:
  client:
    container_name: $CLIENT_HOSTNAME
    build:
      context: ./frontend
      dockerfile: ./.docker/dev.dockerfile
    networks:
      - api-network
    depends_on:
      - api
    ports:
      - "${CLIENT_PORT}:${CLIENT_PORT}"
    environment:
      - CLIENT_PORT=$CLIENT_PORT
      - API_PORT=$API_PORT
      - API_HOSTNAME=$API_HOSTNAME
    volumes:
      - "./frontend:/app"
    command: sh -c "npm install && ng serve --host 0.0.0.0 --port $CLIENT_PORT --proxy-config proxy.conf.js"

  api:
    container_name: $API_HOSTNAME
    image: node:16-alpine
    working_dir: /app
    depends_on:
      - db
    networks:
      - mongo-network
      - api-network
    ports:
      - "${API_PORT}:${API_PORT}"
    environment:
      - API_PORT=$API_PORT
      - TOKEN_SECRET=$TOKEN_SECRET
      - MONGO_PORT=$MONGO_PORT
      - MONGO_HOSTNAME=$MONGO_HOSTNAME
      - MONGO_DB=$MONGO_DB
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
    volumes:
      - "./backend:/app"
    command: sh -c "npm install && npm run start"

  db:
    container_name: ${MONGO_HOSTNAME}
    image: mongo:5.0
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
    networks:
      - mongo-network
    ports:
      - "${MONGO_PORT}:${MONGO_PORT}"
    volumes:
      - db_data:/data/db

networks:
  api-network:
    driver: bridge
  mongo-network:
    driver: bridge

volumes:
  db_data: